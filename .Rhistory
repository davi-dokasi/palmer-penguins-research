species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chisntrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_adelie <- data.frame(
"bill_length_mm_mean" = media_adelie["bill_length_mm"],
"bill_depth_mm_mean" = media_adelie["bill_depth_mm"],
"flipper_length_mm_mean" = media_adelie["flipper_length_mm"],
"body_mass_g_mean" = media_adelie["body_mass_g"]
)
media_chisntrap <- data.frame(
"bill_length_mm_mean" =media_chisntrape["bill_length_mm"],
"bill_depth_mm_mean" = media_chisntrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chisntrap["flipper_length_mm"],
"body_mass_g_mean" = media_chisntrap["body_mass_g"]
)
media_chisntrap <- data.frame(
"bill_length_mm_mean" =media_chisntrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chisntrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chisntrap["flipper_length_mm"],
"body_mass_g_mean" = media_chisntrap["body_mass_g"]
)
media_gentoo <- data.frame(
"bill_length_mm_mean" = media_gentoo["bill_length_mm"],
"bill_depth_mm_mean" = media_gentoo["bill_depth_mm"],
"flipper_length_mm_mean" = media_gentoo["flipper_length_mm"],
"body_mass_g_mean" = media_gentoo["b
print(penguins_db_header)
print(penguins_db)
knitr::opts_chunk$set(echo = FALSE)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)
print(penguins_db)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
library(tidyr)
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
#nstall.packages("kableExtra")
library(kableExtra)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
knitr::kable(t(media_adelie)) %>%
kable_styling(full_width = F, position = "center", font_size = 18)
knitr::kable(t(media_gentoo)) %>%
kable_styling(full_width = F, position = "center", font_size = 18)
media_adelie
t(media_adelie)
media_adelie
media_adelie <- rename(media_adelie$bill_length_mm_mean = "Médias")
media_adelie <- rename("Médias" = media_adelie$bill_length_mm_mean )
media_adelie <- rename("Médias" = media_adelie$bill_length_mm_mean )
media_adelie <- rename("Médias" = media_adelie$'bill_length_mm_mean')
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- médias
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- "Médias"
media_adelie
return(df_novo)
function medias_nome(df) {
function mediasnome(df) {
medias_nome <- function (df) {
df_novo <- names(df)[names(df) == "bill_lenght_mm_mean"] <- "Médias"
return(df_novo)
}
medias_nome(medias_gentoo)
medias_nome(media_gentoo)
media_gentoo
media_adelie
media_gentoo
media_adelie
t(media_gentoo)
return(df)
medias_nome <- function (df) {
names(df)[names(df) == "bill_lenght_mm_mean"] <- "Médias"
return(df)
}
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
#nstall.packages("kableExtra")
library(kableExtra)
# DOCUMENTAÇÃO DO QUARTO https://quarto.org/docs/presentations/revealjs/
#Carregando o Data Base Penguins:
penguins_db <- read_csv("penguins.csv")
# Header para tabelas knit do database original
penguins_db_header <- c("Index", "Specie",
"Island", "Bill Length (mm)",
"Bill Depth (mm)", "Flipper Length (mm)",
"Body Mass (g)", "Sex", "Year")
print(penguins_db)
#Criando um subset para cada espécie:
species_unique <- unique(penguins_db$species)
islands_unique <- unique(penguins_db$island)
nrows_species <- c()
nrows_species_male <- c()
nrows_species_female <- c()
for (spec in species_unique) {
# Banco de dados
subset_name <- paste("species_separadas_", tolower(spec), sep = "")
assign(subset_name, penguins_db[penguins_db$species == spec, ])
# Número de registros por espécie
nrows_name <- paste("nrows_", tolower(spec), sep = "")
assign(nrows_name, nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species <- c(nrows_species,
nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species_male <- c(nrows_species_male,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "male", ]))
nrows_species_female <- c(nrows_species_female,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "female", ]))
}
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chisntrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
#####################
media_adelie <- data.frame(
"bill_length_mm_mean" = media_adelie["bill_length_mm"],
"bill_depth_mm_mean" = media_adelie["bill_depth_mm"],
"flipper_length_mm_mean" = media_adelie["flipper_length_mm"],
"body_mass_g_mean" = media_adelie["body_mass_g"]
)
media_chisntrap <- data.frame(
"bill_length_mm_mean" =media_chisntrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chisntrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chisntrap["flipper_length_mm"],
"body_mass_g_mean" = media_chisntrap["body_mass_g"]
)
media_gentoo <- data.frame(
"bill_length_mm_mean" = media_gentoo["bill_length_mm"],
"bill_depth_mm_mean" = media_gentoo["bill_depth_mm"],
"flipper_length_mm_mean" = media_gentoo["flipper_length_mm"],
"body_mass_g_mean" = media_gentoo["body_mass_g"]
)
media_adelie
medias_nome(media_adelie)
medias_nome(media_adelie)
medias_nome <- function (df) {
df = names(df)[names(df) == "bill_lenght_mm_mean"] <- "Médias"
return(df)
}
medias_nome(media_adelie)
media_adelie
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- "Médias"
media_adelie
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm_mean"] <- "Médias"
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm_mean"] <- "Médias"
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm_mean"] <- "Médias"
media_chinstrap <- data.frame(
"bill_length_mm_mean" =media_chinstrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chinstrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chinstrap["flipper_length_mm"],
"body_mass_g_mean" = media_chinstrap["body_mass_g"]
)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- data.frame(
"bill_length_mm_mean" =media_chinstrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chinstrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chinstrap["flipper_length_mm"],
"body_mass_g_mean" = media_chinstrap["body_mass_g"]
)
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm_mean"] <- "Médias"
knitr::kable(t(media_chinstrap)) %>%
kable_styling(full_width = F, position = "center", font_size = 18)
medias_gentoo
media_gentoo
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
#nstall.packages("kableExtra")
library(kableExtra)
# DOCUMENTAÇÃO DO QUARTO https://quarto.org/docs/presentations/revealjs/
#Carregando o Data Base Penguins:
penguins_db <- read_csv("penguins.csv")
# Header para tabelas knit do database original
penguins_db_header <- c("Index", "Specie",
"Island", "Bill Length (mm)",
"Bill Depth (mm)", "Flipper Length (mm)",
"Body Mass (g)", "Sex", "Year")
print(penguins_db)
#Criando um subset para cada espécie:
species_unique <- unique(penguins_db$species)
islands_unique <- unique(penguins_db$island)
nrows_species <- c()
nrows_species_male <- c()
nrows_species_female <- c()
for (spec in species_unique) {
# Banco de dados
subset_name <- paste("species_separadas_", tolower(spec), sep = "")
assign(subset_name, penguins_db[penguins_db$species == spec, ])
# Número de registros por espécie
nrows_name <- paste("nrows_", tolower(spec), sep = "")
assign(nrows_name, nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species <- c(nrows_species,
nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species_male <- c(nrows_species_male,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "male", ]))
nrows_species_female <- c(nrows_species_female,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "female", ]))
}
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
#####################
media_adelie <- data.frame(
"bill_length_mm_mean" = media_adelie["bill_length_mm"],
"bill_depth_mm_mean" = media_adelie["bill_depth_mm"],
"flipper_length_mm_mean" = media_adelie["flipper_length_mm"],
"body_mass_g_mean" = media_adelie["body_mass_g"]
)
media_chinstrap <- data.frame(
"bill_length_mm_mean" =media_chinstrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chinstrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chinstrap["flipper_length_mm"],
"body_mass_g_mean" = media_chinstrap["body_mass_g"]
)
media_gentoo <- data.frame(
"bill_length_mm_mean" = media_gentoo["bill_length_mm"],
"bill_depth_mm_mean" = media_gentoo["bill_depth_mm"],
"flipper_length_mm_mean" = media_gentoo["flipper_length_mm"],
"body_mass_g_mean" = media_gentoo["body_mass_g"]
)
media_gentoo
names(media_adelie)[names(media_adelie) == "bill_length_mm"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm"] <- "Médias"
media_gentoo
t(media_gentoo)
names(t(media_adelie))[names(t(media_adelie)) == "bill_length_mm"] <- "Médias"
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
names(media_adelie)[names(media_adelie) == "bill_length_mm"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm"] <- "Médias"
names(
media_adelie
media_adelie
knitr::opts_chunk$set(echo = FALSE)
knitr::kable(head(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)
set.seed(1234)
#Histrograma da variável Flipper Lenght
ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
set.seed(1234)
#Histrograma da variável Flipper Lenght
ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
set.seed(1234)
#Histrograma da variável Flipper Lenght
ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
#Histrograma da variável Flipper Lenght
ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência") +
theme(plot.margin = margin(1, 1, 1, 1, "cm"))
```{r Curva Teórica Explicação, warning=FALSE, message=FALSE}
```{r Curva Teórica Explicação, warning=FALSE, message=FALSE}
set.seed(1234)
#Histrograma da variável Flipper Lenght
flipper_lenght_adelie <- ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
# Única maneira que eu encontrei de fazer o gráfico ficar de maneira correta
# no tabs...
# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie)
# Única maneira que eu encontrei de fazer o gráfico ficar de maneira correta
# no tabs...
# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie,width = 100, height = 5)
set.seed(1234)
#Histrograma da variável Flipper Lenght
flipper_lenght_adelie <- ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
# Única maneira que eu encontrei de fazer o gráfico ficar de maneira correta
# no tabs...
# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie,width = 100, height = 5)
set.seed(1234)
#Histrograma da variável Flipper Lenght
flipper_lenght_adelie <- ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
# Única maneira que eu encontrei de fazer o gráfico ficar de maneira correta
# no tabs...
# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie)
#O limite inferior feito com a fórmula é de:
#média da coluna comprimento do bico
media_adelie <- mean(species_separadas_adelie$flipper_length_mm, na.rm = TRUE)
# z <- qnorm(p = 0.025, mean = 0, sd = 1, lower.tail = FALSE) #Gerando Z-Score para 0.95 dos dados
z <- qnorm(0.025, lower.tail = FALSE)
# n <- length(species_separadas_adelie$species) #tamanho da amostra
n <- nrow(species_separadas_adelie)
sd_adelie <- sd(species_separadas_adelie$flipper_length_mm, na.rm = TRUE) #desvio padrão da amostra
#Gerando o limite Inferior pela fórmula:
lim_inf <- media_adelie - z * sd_adelie/sqrt(n)
lim_inf
#Gerando o limite Superior pela fórmula:
lim_sup <- media_adelie + z * sd_adelie/sqrt(n)
lim_sup
#Análise de todas juntas
#Por fim a espécie 	Chinstrap
species_separadas_chinstrap <- penguins_db %>%
filter(species == "Chinstrap")
n_repeticoes <- 10000 #número de repetições de amostras
repeticoes_media_chinstrap <- as.numeric(n_repeticoes) #vetor que armazena as repetições de amostras
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_chinstrap$flipper_length_mm, size = n, replace = TRUE)
repeticoes_media_chinstrap[i] <- mean(amostra, na.rm = TRUE)
}
lim_inf_boot_chinstrap  <- qnorm(p = 0.025, mean = mean(repeticoes_media_chinstrap), sd = sd(repeticoes_media_chinstrap, na.rm = TRUE)) #Limite Inferior
lim_sup_boot_chinstrap  <- qnorm(p = 0.025, mean = mean(repeticoes_media_chinstrap), sd = sd(repeticoes_media_chinstrap, na.rm = TRUE), lower.tail = FALSE) #Limite Superior
#Para espécie Gentoo:
# Já foi feito esse banco
# species_separadas_gentoo <- penguins_db %>%
#   filter(species == "Gentoo")
#número de repetições de amostras
n_repeticoes <- 10000
#vetor que armazena as repetições de amostras
repeticoes_media_gentoo <- as.numeric(n_repeticoes)
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_gentoo$flipper_length_mm,
size = n,
replace = TRUE)
repeticoes_media_gentoo[i] <- mean(amostra, na.rm = TRUE)
}
# Limite Inferior
lim_inf_boot_gentoo <- qnorm(p = 0.025,
mean = mean(repeticoes_media_gentoo),
sd = sd(repeticoes_media_gentoo, na.rm = TRUE))
# Limite Superior
lim_sup_boot_gentoo <- qnorm(p = 0.025,
mean = mean(repeticoes_media_gentoo),
sd = sd(repeticoes_media_gentoo, na.rm = TRUE),
lower.tail = FALSE)
########## GRÁFICO TODAS ESPÉCIES ##############
g11  <- ggplot(data = data, aes(x = x)) +
geom_histogram(aes(y = after_stat(density)),
fill = "#FC9E21",
binwidth = 0.1,
color = "black") +
stat_function(fun = dnorm,
args = list(mean = mean(data$x, na.rm = TRUE), sd = sd(data$x, na.rm = TRUE)),
color = "#100818",
size = 1) +
theme_minimal() +
labs(title = "Histograma das médias",
subtitle = "Para Espécie Adelie",
x = "Comprimento da Nadadeira (mm)",
y = "Densidade",
fill = "Distribuição")
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
# Criando um dataframe com os resultados
resultados <- data.frame(
Espécie = c("Chinstrap", "Gentoo"),
Limite_Inferior = c(lim_inf_boot_chinstrap, lim_inf_boot_gentoo),
Limite_Superior = c(lim_sup_boot_chinstrap, lim_sup_boot_gentoo)
)
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
comp_table <- matrix(c(lim_inf, lim_inf_boot, lim_sup, lim_sup_boot),
nrow = 2, byrow = TRUE)
#Bootstraping para gerar curva teórica
n <- length(species_separadas_adelie$species) #tamanho da amostra
#repetições da amostra
n_repeticoes <- 10000
#vetor que armazena as repetições de amostras
repeticoes_media <- as.numeric(n_repeticoes)
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_adelie$flipper_length_mm,
size = n,
replace = TRUE)
repeticoes_media[i] <- mean(amostra, na.rm = TRUE)
}
# Criando o dataframe
data <- data.frame(x = repeticoes_media)
#Limite Inferior Bootstrap
lim_inf_boot  <- qnorm(p = 0.025,
mean = mean(repeticoes_media),
sd = sd(repeticoes_media,
na.rm = TRUE))
#Limite Superior Bootstrap
lim_sup_boot  <- qnorm(p = 0.025,
mean = mean(repeticoes_media),
sd = sd(repeticoes_media, na.rm = TRUE),
lower.tail = FALSE)
# #Armazenando os limites Inferior e Superior:
# lim_inf <- media_adelie - z * sd_adelie/sqrt(n)
# lim_sup <- media_adelie + z * sd_adelie/sqrt(n)
comp_table <- matrix(c(lim_inf, lim_inf_boot, lim_sup, lim_sup_boot),
nrow = 2, byrow = TRUE)
comp_table
colnames(comp_table) <- c("Fórmula", "Bootstrap")
rownames(comp_table) <- c("Limite Inferior", "Limite Sperior")
comp_table
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
repeticoes_media_adelie <- as.numeric(n_repeticoes)
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_adelie$flipper_length_mm,
size = n,
replace = TRUE)
repeticoes_media_adelie[i] <- mean(amostra, na.rm = TRUE)
}
# Limite Inferior
lim_inf_boot_adelie <- qnorm(p = 0.025,
mean = mean(repeticoes_media_adelie),
sd = sd(repeticoes_media_adelie, na.rm = TRUE))
# Limite Superior
lim_sup_boot_adelie <- qnorm(p = 0.025,
mean = mean(repeticoes_media_adelie),
sd = sd(repeticoes_media_adelie, na.rm = TRUE),
lower.tail = FALSE)
resultados <- data.frame(
Espécie = c("Chinstrap", "Gentoo", "Adelie"),
Limite_Inferior = c(lim_inf_boot_chinstrap, lim_inf_boot_gentoo, lim_inf_boot_adelie),
Limite_Superior = c(lim_sup_boot_chinstrap, lim_sup_boot_gentoo, lim_inf_boot_adelie)
)
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
