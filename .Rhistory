summarize(nrows_species = n(),
male_count = sum(ifelse(sex == "male", 1, 0), na.rm = TRUE),
female_count = sum(ifelse(sex == "female", 1, 0), na.rm = TRUE),
bill_length_min = min(bill_length_mm, na.rm = TRUE),
bill_length_max = max(bill_length_mm, na.rm = TRUE),
bill_depth_min = min(bill_depth_mm, na.rm = TRUE),
bill_depth_max = max(bill_depth_mm, na.rm = TRUE),
flipper_length_min = min(flipper_length_mm, na.rm = TRUE),
flipper_length_max = max(flipper_length_mm, na.rm = TRUE),
body_mass_min = min(body_mass_g, na.rm = TRUE),
body_mass_max = max(body_mass_g, na.rm = TRUE),
) %>%
rename(
"Total de observações" = nrows_species,
"Quant. de machos" = male_count,
"Quant. de fêmeas" = female_count,
"Menor comprimento do bico (mm)" = bill_length_min,
"Maior comprimento do bico (mm)" = bill_length_max,
"Menor profundidade do bico (mm)" = bill_depth_min,
"Maior profundidade do bico (mm)" = bill_depth_max,
"Menor comprimento da nadadeira (mm)" = flipper_length_min,
"Maior comprimento da nadadeira (mm)" = flipper_length_max,
"Menor massa corporal (g)" = body_mass_min,
"Maior massa corporal (g)" = body_mass_max
)
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", as.character(species_resum$species)))
knitr::kable(t(species_resum[, 4:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, 4:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[:ncol(species_resum)]),
, 2
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_resum$species))
transposed_data <- as.data.frame(t(species_resum[, 2:ncol(species_resum)]))
print(transposed_data)
cat("Column names:", colnames(transposed_data), "\n")
knitr::kable(transposed_data, col.names = c("", as.character(species_resum$species)))
print(transposed_data)
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_resum$species))
teste <- as.data.frame(t(species_resum[, 2:ncol(species_resum)]))
print(transposed_data)
teste <- as.data.frame(t(species_resum[, 2:ncol(species_resum)]))
print(teste)
teste <- as.data.frame(t(species_resum[, 2:ncol(species_resum)]))
print(teste)
print(teste)
cat("Column names:", colnames(transposed_data), "\n")
cat("Column names:", colnames(teste), "\n")
cat("Column names:", colnames(teste), "\n")
teste <- as.data.frame(t(species_resum[, 3:ncol(species_resum)]))
print(teste)
teste <- as.data.frame(t(species_resum[, 2:ncol(species_resum)]))
print(teste)
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_unique))
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_unique))
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_unique))
knitr::kable(head(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)
t(species_resum)
knitr::t(species_resum)
knitr::kable(t(species_resum))
knitr::kable(t(species_resum[ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum,
col.names = c("", species_resum$species))
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, 4:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, 3:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, 1:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, :ncol(species_resum)]),
knitr::kable(t(species_resum[, :ncol(species_resum)]),
knitr::kable(t(species_resum[ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum,
col.names = c("", species_resum$species))
knitr::kable(t(species_resum,
knitr::kable(t(species_resum,
col.names = c("", species_resum$species))
knitr::kable(t(species_resum,
knitr::kable(t(species_resum,
col.names = c("", species_resum$species))
t(species_resum)
t(species_resum)
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_resum$species))
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c("", species_resum$species))
t(species_resum)
ncol(t(species_resum))
ncol(t(species_resum))
knitr::kable(t(species_resum[, 2:ncol(species_resum)]),
col.names = c(species_resum$species))
r -- version
R --v
R --version
species_separadas_adelie
summary(species_separadas_adelie)
# Removendo linhas com valores NA antes de calcular a média
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(. ~ Specie, data = species_separadas_adelie_sem_na[, c("Bill Length (mm)", "Bill Depth (mm)", "Flipper Length (mm)", "Body Mass (g)")], mean)
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(. ~ Specie, data = species_separadas_adelie_sem_na[, c("Bill Length (mm)", "Bill Depth (mm)", "Flipper Length (mm)", "Body Mass (g)")], mean)
species_separadas_adelie
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(. ~ Specie, data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper _length_mm", "body_mass_g")], mean)
# Exibindo a tabela de médias
print(media_adelie)
species_separadas_adelie
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(. ~ Specie, data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
species_separadas_adelie
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(. ~ species, data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
species_separadas_adelie
media_adelie <- aggregate(. ~ species, data = penguins_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
media_adelie <- aggregate(. ~ species, data = penguins_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
media_adelie <- aggregate(. ~ species, data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
# Calculando a média das variáveis desejadas
media_adelie <- aggregate(. ~ Specie, data = species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], mean)
# Removendo linhas com valores NA antes de calcular a média
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
# Calculando a média das variáveis desejadas
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
# Criando uma tabela com os resultados
media_adelie <- data.frame(
"Mean Bill Length (mm)" = media_adelie["bill_length_mm"],
"Mean Bill Depth (mm)" = media_adelie["bill_depth_mm"],
"Mean Flipper Length (mm)" = media_adelie["flipper_length_mm"],
"Mean Body Mass (g)" = media_adelie["body_mass_g"]
)
# Exibindo a tabela de médias
print(media_adelie)
knitr::kable(media_adelie)
install.packages("kableExtra")
def na_omiter (df):
def naomiter (df):
function na_omiter(df):
# Removendo linhas com valores NA antes de calcular a média
function na_omiter(df):
# Removendo linhas com valores NA antes de calcular a média
function naomiter(df):
return df_naomit
return(df_naomit)
# Removendo linhas com valores NA antes de calcular a média
naomiter <- function(df) {
df_naomit <- na.omit(df)
return(df_naomit)
}
naomiter <- function(df) {
df_naomit <- na.omit(df)
return(df_naomit)
}
calcular_medias <- function(data, species_column, columns_to_mean) {
# Filtra as linhas que não têm valores NA na coluna da espécie
species_separadas <- na.omit(data[data$species == species_column, ])
# Calcula as médias das colunas especificadas
media_species <- colMeans(species_separadas[, columns_to_mean], na.rm = TRUE)
# Cria um data frame com as médias calculadas
media_species_df <- data.frame(
paste0(columns_to_mean, "_mean") = media_species
calcular_medias <- function(data, species_column, columns_to_mean) {
# Filtra as linhas que não têm valores NA na coluna da espécie
species_separadas <- na.omit(data[data$species == species_column, ])
# Calcula as médias das colunas especificadas
media_species <- colMeans(species_separadas[, columns_to_mean], na.rm = TRUE)
# Cria um data frame com as médias calculadas
media_species_df <- data.frame(
paste0(columns_to_mean, "_mean") = media_species
calcular_medias <- function(data, species_column, columns_to_mean) {
# Filtra as linhas que não têm valores NA na coluna da espécie
species_separadas <- na.omit(data[data$species == species_column, ])
# Calcula as médias das colunas especificadas
media_species <- colMeans(species_separadas[, columns_to_mean], na.rm = TRUE)
# Cria um data frame com as médias calculadas
media_species_df <- data.frame(
paste0(columns_to_mean, "_mean") = media_species
calcular_medias <- function(data, species_column, columns_to_mean) {
# Filtra as linhas que não têm valores NA na coluna da espécie
species_separadas <- na.omit(data[data$species == species_column, ])
# Calcula as médias das colunas especificadas
media_species <- colMeans(species_separadas[, columns_to_mean], na.rm = TRUE)
# Cria um data frame com as médias calculadas
media_species_df <- data.frame(
sapply(columns_to_mean, function(col) paste0(col, "_mean") = media_species[col])
)
return(media_species_df)
}
species_separadas_gentoo
print(species_separadas_gentoo)
gentoo_semna <- calcular_medias(species_separadas_gentoo, "Gentoo", columns_to_mean_values)
columns_to_mean_values <- c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")
gentoo_semna <- calcular_medias(species_separadas_gentoo, "Gentoo", columns_to_mean_values)
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chisntrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_adelie <- data.frame(
"bill_length_mm_mean" = media_adelie["bill_length_mm"],
"bill_depth_mm_mean" = media_adelie["bill_depth_mm"],
"flipper_length_mm_mean" = media_adelie["flipper_length_mm"],
"body_mass_g_mean" = media_adelie["body_mass_g"]
)
media_chisntrap <- data.frame(
"bill_length_mm_mean" =media_chisntrape["bill_length_mm"],
"bill_depth_mm_mean" = media_chisntrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chisntrap["flipper_length_mm"],
"body_mass_g_mean" = media_chisntrap["body_mass_g"]
)
media_chisntrap <- data.frame(
"bill_length_mm_mean" =media_chisntrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chisntrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chisntrap["flipper_length_mm"],
"body_mass_g_mean" = media_chisntrap["body_mass_g"]
)
media_gentoo <- data.frame(
"bill_length_mm_mean" = media_gentoo["bill_length_mm"],
"bill_depth_mm_mean" = media_gentoo["bill_depth_mm"],
"flipper_length_mm_mean" = media_gentoo["flipper_length_mm"],
"body_mass_g_mean" = media_gentoo["b
print(penguins_db_header)
print(penguins_db)
knitr::opts_chunk$set(echo = FALSE)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)
print(penguins_db)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
library(tidyr)
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
#nstall.packages("kableExtra")
library(kableExtra)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
knitr::kable(tail(species_separadas_adelie[, 2:ncol(species_separadas_adelie)]),
col.names = penguins_db_header[-1],
align = "ccrrrrcc"
)  %>%
kable_styling(full_width = F, position = "center", font_size = 15)
knitr::kable(t(media_adelie)) %>%
kable_styling(full_width = F, position = "center", font_size = 18)
knitr::kable(t(media_gentoo)) %>%
kable_styling(full_width = F, position = "center", font_size = 18)
media_adelie
t(media_adelie)
media_adelie
media_adelie <- rename(media_adelie$bill_length_mm_mean = "Médias")
media_adelie <- rename("Médias" = media_adelie$bill_length_mm_mean )
media_adelie <- rename("Médias" = media_adelie$bill_length_mm_mean )
media_adelie <- rename("Médias" = media_adelie$'bill_length_mm_mean')
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- médias
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- "Médias"
media_adelie
return(df_novo)
function medias_nome(df) {
function mediasnome(df) {
medias_nome <- function (df) {
df_novo <- names(df)[names(df) == "bill_lenght_mm_mean"] <- "Médias"
return(df_novo)
}
medias_nome(medias_gentoo)
medias_nome(media_gentoo)
media_gentoo
media_adelie
media_gentoo
media_adelie
t(media_gentoo)
return(df)
medias_nome <- function (df) {
names(df)[names(df) == "bill_lenght_mm_mean"] <- "Médias"
return(df)
}
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
#nstall.packages("kableExtra")
library(kableExtra)
# DOCUMENTAÇÃO DO QUARTO https://quarto.org/docs/presentations/revealjs/
#Carregando o Data Base Penguins:
penguins_db <- read_csv("penguins.csv")
# Header para tabelas knit do database original
penguins_db_header <- c("Index", "Specie",
"Island", "Bill Length (mm)",
"Bill Depth (mm)", "Flipper Length (mm)",
"Body Mass (g)", "Sex", "Year")
print(penguins_db)
#Criando um subset para cada espécie:
species_unique <- unique(penguins_db$species)
islands_unique <- unique(penguins_db$island)
nrows_species <- c()
nrows_species_male <- c()
nrows_species_female <- c()
for (spec in species_unique) {
# Banco de dados
subset_name <- paste("species_separadas_", tolower(spec), sep = "")
assign(subset_name, penguins_db[penguins_db$species == spec, ])
# Número de registros por espécie
nrows_name <- paste("nrows_", tolower(spec), sep = "")
assign(nrows_name, nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species <- c(nrows_species,
nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species_male <- c(nrows_species_male,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "male", ]))
nrows_species_female <- c(nrows_species_female,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "female", ]))
}
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chisntrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
#####################
media_adelie <- data.frame(
"bill_length_mm_mean" = media_adelie["bill_length_mm"],
"bill_depth_mm_mean" = media_adelie["bill_depth_mm"],
"flipper_length_mm_mean" = media_adelie["flipper_length_mm"],
"body_mass_g_mean" = media_adelie["body_mass_g"]
)
media_chisntrap <- data.frame(
"bill_length_mm_mean" =media_chisntrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chisntrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chisntrap["flipper_length_mm"],
"body_mass_g_mean" = media_chisntrap["body_mass_g"]
)
media_gentoo <- data.frame(
"bill_length_mm_mean" = media_gentoo["bill_length_mm"],
"bill_depth_mm_mean" = media_gentoo["bill_depth_mm"],
"flipper_length_mm_mean" = media_gentoo["flipper_length_mm"],
"body_mass_g_mean" = media_gentoo["body_mass_g"]
)
media_adelie
medias_nome(media_adelie)
medias_nome(media_adelie)
medias_nome <- function (df) {
df = names(df)[names(df) == "bill_lenght_mm_mean"] <- "Médias"
return(df)
}
medias_nome(media_adelie)
media_adelie
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- "Médias"
media_adelie
names(media_adelie)[names(media_adelie) == "bill_length_mm_mean"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm_mean"] <- "Médias"
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm_mean"] <- "Médias"
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm_mean"] <- "Médias"
media_chinstrap <- data.frame(
"bill_length_mm_mean" =media_chinstrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chinstrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chinstrap["flipper_length_mm"],
"body_mass_g_mean" = media_chinstrap["body_mass_g"]
)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- data.frame(
"bill_length_mm_mean" =media_chinstrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chinstrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chinstrap["flipper_length_mm"],
"body_mass_g_mean" = media_chinstrap["body_mass_g"]
)
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm_mean"] <- "Médias"
knitr::kable(t(media_chinstrap)) %>%
kable_styling(full_width = F, position = "center", font_size = 18)
medias_gentoo
media_gentoo
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
#nstall.packages("kableExtra")
library(kableExtra)
# DOCUMENTAÇÃO DO QUARTO https://quarto.org/docs/presentations/revealjs/
#Carregando o Data Base Penguins:
penguins_db <- read_csv("penguins.csv")
# Header para tabelas knit do database original
penguins_db_header <- c("Index", "Specie",
"Island", "Bill Length (mm)",
"Bill Depth (mm)", "Flipper Length (mm)",
"Body Mass (g)", "Sex", "Year")
print(penguins_db)
#Criando um subset para cada espécie:
species_unique <- unique(penguins_db$species)
islands_unique <- unique(penguins_db$island)
nrows_species <- c()
nrows_species_male <- c()
nrows_species_female <- c()
for (spec in species_unique) {
# Banco de dados
subset_name <- paste("species_separadas_", tolower(spec), sep = "")
assign(subset_name, penguins_db[penguins_db$species == spec, ])
# Número de registros por espécie
nrows_name <- paste("nrows_", tolower(spec), sep = "")
assign(nrows_name, nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species <- c(nrows_species,
nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species_male <- c(nrows_species_male,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "male", ]))
nrows_species_female <- c(nrows_species_female,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "female", ]))
}
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
#####################
media_adelie <- data.frame(
"bill_length_mm_mean" = media_adelie["bill_length_mm"],
"bill_depth_mm_mean" = media_adelie["bill_depth_mm"],
"flipper_length_mm_mean" = media_adelie["flipper_length_mm"],
"body_mass_g_mean" = media_adelie["body_mass_g"]
)
media_chinstrap <- data.frame(
"bill_length_mm_mean" =media_chinstrap["bill_length_mm"],
"bill_depth_mm_mean" = media_chinstrap["bill_depth_mm"],
"flipper_length_mm_mean" = media_chinstrap["flipper_length_mm"],
"body_mass_g_mean" = media_chinstrap["body_mass_g"]
)
media_gentoo <- data.frame(
"bill_length_mm_mean" = media_gentoo["bill_length_mm"],
"bill_depth_mm_mean" = media_gentoo["bill_depth_mm"],
"flipper_length_mm_mean" = media_gentoo["flipper_length_mm"],
"body_mass_g_mean" = media_gentoo["body_mass_g"]
)
media_gentoo
names(media_adelie)[names(media_adelie) == "bill_length_mm"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm"] <- "Médias"
media_gentoo
t(media_gentoo)
names(t(media_adelie))[names(t(media_adelie)) == "bill_length_mm"] <- "Médias"
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
names(media_adelie)[names(media_adelie) == "bill_length_mm"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm"] <- "Médias"
names(
media_adelie
media_adelie
