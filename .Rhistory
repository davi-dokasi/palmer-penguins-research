# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie,width = 100, height = 5)
set.seed(1234)
#Histrograma da variável Flipper Lenght
flipper_lenght_adelie <- ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
# Única maneira que eu encontrei de fazer o gráfico ficar de maneira correta
# no tabs...
# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie,width = 100, height = 5)
set.seed(1234)
#Histrograma da variável Flipper Lenght
flipper_lenght_adelie <- ggplot(data = data.frame(x = species_separadas_adelie$flipper_length_mm),
aes(x = x)) +
geom_histogram(color = "#00a6ff") +
labs(title = "Histograma dos dados da Amostra",
x = "Comprimento da Nadadeira (mm)",
y = "Frequência")
# Única maneira que eu encontrei de fazer o gráfico ficar de maneira correta
# no tabs...
# To salvando em imagem o gráfico, e adicionando em baixo
ggsave("flipper_lenght_adelie.png", plot = flipper_lenght_adelie)
#O limite inferior feito com a fórmula é de:
#média da coluna comprimento do bico
media_adelie <- mean(species_separadas_adelie$flipper_length_mm, na.rm = TRUE)
# z <- qnorm(p = 0.025, mean = 0, sd = 1, lower.tail = FALSE) #Gerando Z-Score para 0.95 dos dados
z <- qnorm(0.025, lower.tail = FALSE)
# n <- length(species_separadas_adelie$species) #tamanho da amostra
n <- nrow(species_separadas_adelie)
sd_adelie <- sd(species_separadas_adelie$flipper_length_mm, na.rm = TRUE) #desvio padrão da amostra
#Gerando o limite Inferior pela fórmula:
lim_inf <- media_adelie - z * sd_adelie/sqrt(n)
lim_inf
#Gerando o limite Superior pela fórmula:
lim_sup <- media_adelie + z * sd_adelie/sqrt(n)
lim_sup
#Análise de todas juntas
#Por fim a espécie 	Chinstrap
species_separadas_chinstrap <- penguins_db %>%
filter(species == "Chinstrap")
n_repeticoes <- 10000 #número de repetições de amostras
repeticoes_media_chinstrap <- as.numeric(n_repeticoes) #vetor que armazena as repetições de amostras
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_chinstrap$flipper_length_mm, size = n, replace = TRUE)
repeticoes_media_chinstrap[i] <- mean(amostra, na.rm = TRUE)
}
lim_inf_boot_chinstrap  <- qnorm(p = 0.025, mean = mean(repeticoes_media_chinstrap), sd = sd(repeticoes_media_chinstrap, na.rm = TRUE)) #Limite Inferior
lim_sup_boot_chinstrap  <- qnorm(p = 0.025, mean = mean(repeticoes_media_chinstrap), sd = sd(repeticoes_media_chinstrap, na.rm = TRUE), lower.tail = FALSE) #Limite Superior
#Para espécie Gentoo:
# Já foi feito esse banco
# species_separadas_gentoo <- penguins_db %>%
#   filter(species == "Gentoo")
#número de repetições de amostras
n_repeticoes <- 10000
#vetor que armazena as repetições de amostras
repeticoes_media_gentoo <- as.numeric(n_repeticoes)
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_gentoo$flipper_length_mm,
size = n,
replace = TRUE)
repeticoes_media_gentoo[i] <- mean(amostra, na.rm = TRUE)
}
# Limite Inferior
lim_inf_boot_gentoo <- qnorm(p = 0.025,
mean = mean(repeticoes_media_gentoo),
sd = sd(repeticoes_media_gentoo, na.rm = TRUE))
# Limite Superior
lim_sup_boot_gentoo <- qnorm(p = 0.025,
mean = mean(repeticoes_media_gentoo),
sd = sd(repeticoes_media_gentoo, na.rm = TRUE),
lower.tail = FALSE)
########## GRÁFICO TODAS ESPÉCIES ##############
g11  <- ggplot(data = data, aes(x = x)) +
geom_histogram(aes(y = after_stat(density)),
fill = "#FC9E21",
binwidth = 0.1,
color = "black") +
stat_function(fun = dnorm,
args = list(mean = mean(data$x, na.rm = TRUE), sd = sd(data$x, na.rm = TRUE)),
color = "#100818",
size = 1) +
theme_minimal() +
labs(title = "Histograma das médias",
subtitle = "Para Espécie Adelie",
x = "Comprimento da Nadadeira (mm)",
y = "Densidade",
fill = "Distribuição")
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
# Criando um dataframe com os resultados
resultados <- data.frame(
Espécie = c("Chinstrap", "Gentoo"),
Limite_Inferior = c(lim_inf_boot_chinstrap, lim_inf_boot_gentoo),
Limite_Superior = c(lim_sup_boot_chinstrap, lim_sup_boot_gentoo)
)
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
comp_table <- matrix(c(lim_inf, lim_inf_boot, lim_sup, lim_sup_boot),
nrow = 2, byrow = TRUE)
#Bootstraping para gerar curva teórica
n <- length(species_separadas_adelie$species) #tamanho da amostra
#repetições da amostra
n_repeticoes <- 10000
#vetor que armazena as repetições de amostras
repeticoes_media <- as.numeric(n_repeticoes)
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_adelie$flipper_length_mm,
size = n,
replace = TRUE)
repeticoes_media[i] <- mean(amostra, na.rm = TRUE)
}
# Criando o dataframe
data <- data.frame(x = repeticoes_media)
#Limite Inferior Bootstrap
lim_inf_boot  <- qnorm(p = 0.025,
mean = mean(repeticoes_media),
sd = sd(repeticoes_media,
na.rm = TRUE))
#Limite Superior Bootstrap
lim_sup_boot  <- qnorm(p = 0.025,
mean = mean(repeticoes_media),
sd = sd(repeticoes_media, na.rm = TRUE),
lower.tail = FALSE)
# #Armazenando os limites Inferior e Superior:
# lim_inf <- media_adelie - z * sd_adelie/sqrt(n)
# lim_sup <- media_adelie + z * sd_adelie/sqrt(n)
comp_table <- matrix(c(lim_inf, lim_inf_boot, lim_sup, lim_sup_boot),
nrow = 2, byrow = TRUE)
comp_table
colnames(comp_table) <- c("Fórmula", "Bootstrap")
rownames(comp_table) <- c("Limite Inferior", "Limite Sperior")
comp_table
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
repeticoes_media_adelie <- as.numeric(n_repeticoes)
for (i in 1:n_repeticoes) {
amostra <- sample(species_separadas_adelie$flipper_length_mm,
size = n,
replace = TRUE)
repeticoes_media_adelie[i] <- mean(amostra, na.rm = TRUE)
}
# Limite Inferior
lim_inf_boot_adelie <- qnorm(p = 0.025,
mean = mean(repeticoes_media_adelie),
sd = sd(repeticoes_media_adelie, na.rm = TRUE))
# Limite Superior
lim_sup_boot_adelie <- qnorm(p = 0.025,
mean = mean(repeticoes_media_adelie),
sd = sd(repeticoes_media_adelie, na.rm = TRUE),
lower.tail = FALSE)
resultados <- data.frame(
Espécie = c("Chinstrap", "Gentoo", "Adelie"),
Limite_Inferior = c(lim_inf_boot_chinstrap, lim_inf_boot_gentoo, lim_inf_boot_adelie),
Limite_Superior = c(lim_sup_boot_chinstrap, lim_sup_boot_gentoo, lim_inf_boot_adelie)
)
# Imprimindo a tabela
knitr::kable(resultados, caption = "Limites Inferiores e Superiores para as espécies Chinstrap e Gentoo")
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha_adelie = 0.05
n = length(species_separada_adelie$species)
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
library(kableExtra)
# DOCUMENTAÇÃO DO QUARTO https://quarto.org/docs/presentations/revealjs/
#Carregando o Data Base Penguins:
penguins_db <- read_csv("penguins.csv")
# Header para tabelas knit do database original
penguins_db_header <- c("Index", "Specie",
"Island", "Bill Length (mm)",
"Bill Depth (mm)", "Flipper Length (mm)",
"Body Mass (g)", "Sex", "Year")
#Criando um subset para cada espécie:
species_unique <- unique(penguins_db$species)
islands_unique <- unique(penguins_db$island)
nrows_species <- c()
nrows_species_male <- c()
nrows_species_female <- c()
for (spec in species_unique) {
# Banco de dados
subset_name <- paste("species_separadas_", tolower(spec), sep = "")
assign(subset_name, penguins_db[penguins_db$species == spec, ])
# Número de registros por espécie
nrows_name <- paste("nrows_", tolower(spec), sep = "")
assign(nrows_name, nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species <- c(nrows_species,
nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species_male <- c(nrows_species_male,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "male", ]))
nrows_species_female <- c(nrows_species_female,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "female", ]))
}
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
names(media_adelie)[names(media_adelie) == "bill_length_mm"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm"] <- "Médias"
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm"] <- "Médias"
#####################
media_adelie <- data.frame(
"Comprimento_Bico(mm)" = media_adelie["Médias"],
"Profundidade_Bico(mm)" = media_adelie["bill_depth_mm"],
"Comp_Nadadeira(mm)" = media_adelie["flipper_length_mm"],
"Massa_Corporal(g)" = media_adelie["body_mass_g"]
)
media_chinstrap <- data.frame(
"Comprimento_Bico(mm)" =media_chinstrap["Médias"],
"Profundidade_Bico(mm)" = media_chinstrap["bill_depth_mm"],
"Comp_Nadadeira(mm)" = media_chinstrap["flipper_length_mm"],
"Massa_Corporal(g)" = media_chinstrap["body_mass_g"]
)
media_gentoo <- data.frame(
"Comprimento_Bico(mm)" = media_gentoo["Médias"],
"Profundidade_Bico(mm)" = media_gentoo["bill_depth_mm"],
"Comp_Nadadeira(mm)" = media_gentoo["flipper_length_mm"],
"Massa_Corporal(g)" = media_gentoo["body_mass_g"]
)
vars <- c(
"Total de observações",
"Quant. de machos",
"Quant. de fêmeas",
"Menor comprimento do bico",
"Maior comprimento do bico",
"Menor profundidade do bico",
"Maior profundidade do bico",
"Menor comprimento da nadadeira",
"Maior comprimento da nadadeira",
"Menor massa corporal",
"Maior massa corporal"
)
species_resum <- penguins_db %>%
group_by(species) %>%
summarize(nrows_species = n(),
male_count = sum(ifelse(sex == "male", 1, 0), na.rm = TRUE),
female_count = sum(ifelse(sex == "female", 1, 0), na.rm = TRUE),
bill_length_min = min(bill_length_mm, na.rm = TRUE),
bill_length_max = max(bill_length_mm, na.rm = TRUE),
bill_depth_min = min(bill_depth_mm, na.rm = TRUE),
bill_depth_max = max(bill_depth_mm, na.rm = TRUE),
flipper_length_min = min(flipper_length_mm, na.rm = TRUE),
flipper_length_max = max(flipper_length_mm, na.rm = TRUE),
body_mass_min = min(body_mass_g, na.rm = TRUE),
body_mass_max = max(body_mass_g, na.rm = TRUE),
) %>%
rename(
"Total de observações" = nrows_species,
"Quant. de machos" = male_count,
"Quant. de fêmeas" = female_count,
"Menor comprimento do bico (mm)" = bill_length_min,
"Maior comprimento do bico (mm)" = bill_length_max,
"Menor profundidade do bico (mm)" = bill_depth_min,
"Maior profundidade do bico (mm)" = bill_depth_max,
"Menor comprimento da nadadeira (mm)" = flipper_length_min,
"Maior comprimento da nadadeira (mm)" = flipper_length_max,
"Menor massa corporal (g)" = body_mass_min,
"Maior massa corporal (g)" = body_mass_max
)
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha_adelie = 0.05
n = length(species_separada_adelie$species)
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha_adelie = 0.05
n = length(species_separada_adelie$species)
#Bibliotecas Usadas:
library(readr)
library(dplyr)
library(gridExtra)
library(patchwork)
library(ggplot2)
library(magick)
library(tidyr)
library(kableExtra)
# DOCUMENTAÇÃO DO QUARTO https://quarto.org/docs/presentations/revealjs/
#Carregando o Data Base Penguins:
penguins_db <- read_csv("penguins.csv")
# Header para tabelas knit do database original
penguins_db_header <- c("Index", "Specie",
"Island", "Bill Length (mm)",
"Bill Depth (mm)", "Flipper Length (mm)",
"Body Mass (g)", "Sex", "Year")
#Criando um subset para cada espécie:
species_unique <- unique(penguins_db$species)
islands_unique <- unique(penguins_db$island)
nrows_species <- c()
nrows_species_male <- c()
nrows_species_female <- c()
for (spec in species_unique) {
# Banco de dados
subset_name <- paste("species_separadas_", tolower(spec), sep = "")
assign(subset_name, penguins_db[penguins_db$species == spec, ])
# Número de registros por espécie
nrows_name <- paste("nrows_", tolower(spec), sep = "")
assign(nrows_name, nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species <- c(nrows_species,
nrow(penguins_db[penguins_db$species == spec, ]))
nrows_species_male <- c(nrows_species_male,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "male", ]))
nrows_species_female <- c(nrows_species_female,
nrow(penguins_db[penguins_db$species == spec &
penguins_db$sex == "female", ]))
}
species_separadas_adelie_sem_na <- na.omit(species_separadas_adelie)
species_separadas_chinstrap_sem_na <- na.omit(species_separadas_chinstrap)
species_separadas_gentoo_sem_na <- na.omit(species_separadas_gentoo)
media_adelie <- colMeans(species_separadas_adelie_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_chinstrap <- colMeans(species_separadas_chinstrap_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
media_gentoo <- colMeans(species_separadas_gentoo_sem_na[, c("bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g")], na.rm = TRUE)
names(media_adelie)[names(media_adelie) == "bill_length_mm"] <- "Médias"
names(media_gentoo)[names(media_gentoo) == "bill_length_mm"] <- "Médias"
names(media_chinstrap)[names(media_chinstrap) == "bill_length_mm"] <- "Médias"
#####################
media_adelie <- data.frame(
"Comprimento_Bico(mm)" = media_adelie["Médias"],
"Profundidade_Bico(mm)" = media_adelie["bill_depth_mm"],
"Comp_Nadadeira(mm)" = media_adelie["flipper_length_mm"],
"Massa_Corporal(g)" = media_adelie["body_mass_g"]
)
media_chinstrap <- data.frame(
"Comprimento_Bico(mm)" =media_chinstrap["Médias"],
"Profundidade_Bico(mm)" = media_chinstrap["bill_depth_mm"],
"Comp_Nadadeira(mm)" = media_chinstrap["flipper_length_mm"],
"Massa_Corporal(g)" = media_chinstrap["body_mass_g"]
)
media_gentoo <- data.frame(
"Comprimento_Bico(mm)" = media_gentoo["Médias"],
"Profundidade_Bico(mm)" = media_gentoo["bill_depth_mm"],
"Comp_Nadadeira(mm)" = media_gentoo["flipper_length_mm"],
"Massa_Corporal(g)" = media_gentoo["body_mass_g"]
)
species_separadas_adelie
n = length(species_separadas_adelie$species)
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha_adelie = 0.05
n = length(species_separadas_adelie$species)
p_chapeu_adelie = length(species_separada_adelie$species)/length(penguins_db$species)
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha_adelie = 0.05
n = length(species_separadas_adelie$species)
p_chapeu_adelie = length(species_separadas_adelie$species)/length(penguins_db$species)
p0 = 0.3
z_adelie_1 = (p_chapeu_adelie-p0)/sqrt(p0*(1-p0)/n)
z_adelie_1
p_valor_adelie = pnorm(z_adelie_1)*2
p_valor_adelie
p_valor_adelie < alpha_adelie
# Como o pvalor é maior alpha, aceitamos h0
# Portanto, ao nível de 5%,os dados mostram que a proporção da população de pinguins da espécie Adelie é igual a 0.3(30%).
p_valor_adelie
z_adelie_1
p_valor_adelie < alpha_adelie
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha_adelie = 0.05
n = length(species_separadas_adelie$species)
p_chapeu_adelie = length(species_separadas_adelie$species)/length(penguins_db$species)
p0 = 0.33
z_adelie_1 = (p_chapeu_adelie-p0)/sqrt(p0*(1-p0)/n)
z_adelie_1
p_valor_adelie = pnorm(z_adelie_1)*2
p_valor_adelie
p_valor_adelie < alpha_adelie
# Como o pvalor é maior alpha, aceitamos h0
# Portanto, ao nível de 5%,os dados mostram que a proporção da população de pinguins da espécie Adelie é igual a 0.3(30%).
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha = 0.05
n = length(species_separadas_adelie$species)
p_chapeu_adelie = length(species_separadas_adelie$species)/length(penguins_db$species)
p0 = 0.33
z_adelie_1 = (p_chapeu_adelie-p0)/sqrt(p0*(1-p0)/n)
z_adelie_1
p_valor_adelie = pnorm(z_adelie_1)*2
p_valor_adelie
p_valor_adelie < alpha
# Como o pvalor é maior alpha, aceitamos h0
# Portanto, ao nível de 5%,os dados mostram que a proporção da população de pinguins da espécie Adelie é igual a 0.3(30%).
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha = 0.05
n = length(species_separada_adelie$species)
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
alpha = 0.05
n = length(species_separadas_adelie$species)
p_chapeu_adelie = length(species_separadas_adelie$species)/length(penguins_db$species)
p0 = 0.3
z_adelie_1 = (p_chapeu_adelie-p0)/sqrt(p0*(1-p0)/n)
z_adelie_1
p_valor_adelie = pnorm(z_adelie_1)*2
p_valor_adelie
p_valor_adelie < alpha
# Como o pvalor é maior alpha, aceitamos h0
# Portanto, ao nível de 5%,os dados mostram que a proporção da população de pinguins da espécie Adelie é igual a 0.3(30%).
n = length(species_separadas_adelie$species)
n
length(penguins_db$species)
n_amostra = length(penguins_db$species)
p_chapeu_adelie = n/n_amostra # proporção adelie/amostra total
# Teste de proporção da QUANTIDADE de pinguins para a espécie Adelie
# h0 é igual a 0.3
# h1 é diferente de 0.3
p0 = 0.3
alpha = 0.05
n_dataset= length(penguins_db$species)
n = length(species_separadas_adelie$species) # tamanho da espécie adélie no dt
p_chapeu_adelie = n/n_dataset # proporção adelie/amostra total
z_adelie_1 = (p_chapeu_adelie-p0)/sqrt(p0*(1-p0)/n)
z_adelie_1
p_valor_adelie = pnorm(z_adelie_1)*2
p_valor_adelie
p_valor_adelie < alpha
# Como o pvalor é maior alpha, aceitamos h0
# Portanto, ao nível de 5%,os dados mostram que a proporção da população de pinguins da espécie Adelie é igual a 0.3(30%).
p_chapeu_chinstrap = length(specie_chinstrap$species)/length(penguins_db$species)
species_separadas_chinstrap
p_chapeu_chinstrap = length(species_separadas_chinstrap$species)/length(penguins_db$species)
p
p_chapeu
p_chapeu_chinstrap
p_chapeu_chinstrap = n/length(penguins_db$species)
p_chapeu_chinstrap
# Teste para proporção para a QUANTIDADE de pinguins da especie Chinstrap.
# h0 é igual a 0.3
# h1 é diferente de 0.3
n = length(species_separadas_chinstrap$species)
p_chapeu_chinstrap = n/length(penguins_db$species)
p_chapeu_chinstrap
# Teste para proporção para a QUANTIDADE de pinguins da especie Chinstrap.
# h0 é igual a 0.3
# h1 é diferente de 0.3
n = length(species_separadas_chinstrap$species)
p_chapeu_chinstrap = n/n_dataset
p_chapeu_chinstrap
p0 = 0.3
z_chinstrap_1 = (p_chapeu_chinstrap-p0)/sqrt(p0*(1-p0)/n)
z_chinstrap_1
p_valor_chinstrap = pnorm(z_chinstrap_1)*2
p_valor_chinstrap
p_valor_chinstrap < alpha_chinstrap
# Teste para proporção para a QUANTIDADE de pinguins da especie Chinstrap.
# h0 é igual a 0.33
# h1 é diferente de 0.33
n = length(species_separadas_chinstrap$species)
p_chapeu_chinstrap = n/n_dataset
z_chinstrap_1 = (p_chapeu_chinstrap-p0)/sqrt(p0*(1-p0)/n)
z_chinstrap_1
p_valor_chinstrap = pnorm(z_chinstrap_1)*2
p_valor_chinstrap
p_valor_chinstrap < alpha_chinstrap
# Teste para proporção para a QUANTIDADE de pinguins da especie Chinstrap.
# h0 é igual a 0.33
# h1 é diferente de 0.33
n = length(species_separadas_chinstrap$species)
p_chapeu_chinstrap = n/n_dataset
z_chinstrap_1 = (p_chapeu_chinstrap-p0)/sqrt(p0*(1-p0)/n)
z_chinstrap_1
p_valor_chinstrap = pnorm(z_chinstrap_1)*2
p_valor_chinstrap
p_valor_chinstrap < alpha
# Como pvalor é maior que alpha, aceitamos h0
# Ao nível de 5%,os dados mostram que a proporção populacional de pinguins da espécie Chinstrap é igual a 0.3(30%).
p_chapeu_chinstrap
# Teste para proporção da QUANTIDADE de pinguins para a especie Gentoo
# h0 é igual 0.33
# h1 é diferente de 0.33
n = length(specie_gentoo$species)
# Teste para proporção da QUANTIDADE de pinguins para a especie Gentoo
# h0 é igual 0.33
# h1 é diferente de 0.33
n = length(specie_gentoo$species)
# Teste para proporção da QUANTIDADE de pinguins para a especie Gentoo
# h0 é igual 0.33
# h1 é diferente de 0.33
species_separadas_gentoo
n = length(species_separadas_gentoo$species)
p_chapeu_gentoo = n/n_dataset
z_gentto_1 = (p_chapeu_gentoo-p0)/sqrt(p0*(1-p0)/n)
z_gentto_1
p_valor_gentoo = pnorm(z_gentto_1)*2
p_valor_gentoo
p_valor_gentoo < alpha
# Como pvalor é maior que alpha, aceitamos h0
# Portanto, ao nível de 5%,os dados mostram que a proporção da populacional de pinguins da espécie Gentoo é igaul a 0.3(30%).
